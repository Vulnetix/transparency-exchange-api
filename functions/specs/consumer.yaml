jsonSchemaDialect: https://spec.openapis.org/oas/3.1/dialect/base
openapi: 3.1.1
info:
  title: Transparency Exchange API
  summary: Transparency Exchange API specification for consumers and publishers
  description: |
    The Transparency Exchange API (TEA) provides standardized access to software transparency artifacts such as SBOMs, VEX, VDR, and other attestations.
  contact:
    name: TEA Working Group
    url: https://github.com/CycloneDX/transparency-exchange-api
  license:
    name: Apache 2.0
    url: https://github.com/CycloneDX/transparency-exchange-api/blob/main/LICENSE
  version: 0.1.0-beta.2
servers:
  - url: http://localhost/tea/v1
    description: Local development
paths:
  /product:
    get:
      description: Get all TEA Products with optional filtering
      operationId: getTeaProducts
      parameters:
        - $ref: '#/components/parameters/page-offset'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/barcode'
        - $ref: '#/components/parameters/sku'
        - $ref: '#/components/parameters/vendorUuid'
        - $ref: '#/components/parameters/idType'
        - $ref: '#/components/parameters/id-value'
      responses:
        '200':
          $ref: '#/components/responses/200-tea-products-list'
        '400':
          $ref: '#/components/responses/400-invalid-parameters'
        '401':
          $ref: '#/components/responses/401-unauthorized'
      tags:
        - TEA Product
  /product/{uuid}:
    get:
      description: Get a specific TEA Product by UUID
      operationId: getTeaProduct
      parameters:
        - name: uuid
          in: path
          required: true
          description: UUID of TEA Product in the TEA server
          schema:
            type: string
            format: uuid
      responses:
        '200':
          $ref: '#/components/responses/200-tea-product'
        '401':
          $ref: '#/components/responses/401-unauthorized'
        '404':
          $ref: '#/components/responses/404-object-by-id-not-found'
      tags:
        - TEA Product
  /component:
    get:
      description: Get all TEA Components with optional filtering
      operationId: getTeaComponents
      parameters:
        - $ref: '#/components/parameters/page-offset'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/idType'
        - $ref: '#/components/parameters/id-value'
      responses:
        '200':
          $ref: '#/components/responses/200-tea-components-list'
        '400':
          $ref: '#/components/responses/400-invalid-parameters'
        '401':
          $ref: '#/components/responses/401-unauthorized'
      tags:
        - TEA Component
  /component/{uuid}:
    get:
      description: Get a specific TEA Component by UUID
      operationId: getTeaComponent
      parameters:
        - name: uuid
          in: path
          required: true
          description: UUID of TEA Component in the TEA server
          schema:
            type: string
            format: uuid
      responses:
        '200':
          $ref: '#/components/responses/200-tea-component'
        '401':
          $ref: '#/components/responses/401-unauthorized'
        '404':
          $ref: '#/components/responses/404-object-by-id-not-found'
      tags:
        - TEA Component
  /release:
    get:
      description: Get all TEA Releases with optional filtering
      operationId: getTeaReleases
      parameters:
        - $ref: '#/components/parameters/page-offset'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/idType'
        - $ref: '#/components/parameters/id-value'
      responses:
        '200':
          $ref: '#/components/responses/200-tea-releases-list'
        '400':
          $ref: '#/components/responses/400-invalid-parameters'
        '401':
          $ref: '#/components/responses/401-unauthorized'
      tags:
        - TEA Release
  /release/{uuid}:
    get:
      description: Get a specific TEA Release by UUID
      operationId: getTeaRelease
      parameters:
        - name: uuid
          in: path
          required: true
          description: UUID of TEA Release in the TEA server
          schema:
            type: string
            format: uuid
      responses:
        '200':
          $ref: '#/components/responses/200-tea-release'
        '401':
          $ref: '#/components/responses/401-unauthorized'
        '404':
          $ref: '#/components/responses/404-object-by-id-not-found'
      tags:
        - TEA Release
  /collection:
    get:
      description: Get all TEA Collections with optional filtering
      operationId: getTeaCollections
      parameters:
        - $ref: '#/components/parameters/page-offset'
        - $ref: '#/components/parameters/pageSize'
      responses:
        '200':
          $ref: '#/components/responses/200-tea-collections-list'
        '400':
          $ref: '#/components/responses/400-invalid-parameters'
        '401':
          $ref: '#/components/responses/401-unauthorized'
      tags:
        - TEA Collection
  /collection/{uuid}:
    get:
      description: Get a specific TEA Collection by UUID
      operationId: getTeaCollection
      parameters:
        - name: uuid
          in: path
          required: true
          description: UUID of TEA Collection in the TEA server
          schema:
            type: string
            format: uuid
      responses:
        '200':
          $ref: '#/components/responses/200-tea-collection'
        '401':
          $ref: '#/components/responses/401-unauthorized'
        '404':
          $ref: '#/components/responses/404-object-by-id-not-found'
      tags:
        - TEA Collection
components:
  schemas:
    identifier:
      type: object
      description: An identifier with a specified type
      properties:
        idType:
          description: Type of identifier, e.g. `tei`, `purl`, `cpe`, `swid`
          type: string
          enum:
            - cpe
            - tei
            - purl
            - swid
        idValue:
          description: Identifier value
          type: string
      required:
        - idType
        - idValue
    artifactChecksum:
      type: object
      properties:
        algType:
          description: Checksum algorithm
          type: string
          enum:
            - SHA-256
            - SHA-384
            - SHA-512
            - SHA3-256
            - SHA3-384
            - SHA3-512
            - BLAKE2b-256
            - BLAKE2b-384
            - BLAKE2b-512
            - BLAKE3
        algValue:
          type: string
          description: Checksum value
      required:
        - algType
        - algValue
    product:
      type: object
      properties:
        identifier:
          $ref: '#/components/schemas/typeUuid'
          description: A unique identifier for the TEA product
        name:
          type: string
          description: Product name
        barcode:
          type: string
          description: Barcode
        sku:
          type: string
          description: Product SKU
        vendorUuid:
          $ref: '#/components/schemas/typeUuid'
          description: Vendor UUID
        identifiers:
          type: array
          description: List of identifiers for the product
          items:
            $ref: '#/components/schemas/identifier'
        type:
          $ref: '#/components/schemas/typePackage'
          description: Product type
        namespace:
          type: string
          description: Product namespace (optional)
        version:
          type: string
          description: Product version (optional)
        qualifiers:
          type: array
          items:
            type: object
            additionalProperties:
              type: string
          description: Array of qualifier objects containing related key-value pairs (optional)
        subpath:
          type: string
          description: Subpath (optional)
        components:
          type: array
          description: List of TEA component UUIDs
          items:
            $ref: '#/components/schemas/typeUuid'
      required:
        - identifier
        - name
        - identifiers
        - components
    component:
      type: object
      description: A TEA component
      properties:
        uuid:
          description: A unique identifier for the TEA component
          $ref: '#/components/schemas/typeUuid'
        name:
          type: string
          description: Component name
        identifiers:
          type: array
          description: List of identifiers for the component
          items:
            $ref: '#/components/schemas/identifier'
        versions:
          type: array
          description: List of available versions for this component
          items:
            type: string
        releases:
          type: array
          description: List of UUIDs referencing TEA Release entries
          items:
            $ref: '#/components/schemas/typeUuid'
      required:
        - uuid
        - name
        - identifiers
        - versions
    release:
      type: object
      description: A TEA release
      properties:
        uuid:
          description: A unique identifier for the TEA Component Release
          $ref: '#/components/schemas/typeUuid'
        version:
          description: Version number
          type: string
          example: 1.2.3
        releaseDate:
          description: Timestamp of the release (for sorting purposes)
          type: string
          format: date-time
          example: '2024-03-20T15:30:00Z'
        preRelease:
          type: boolean
          description: A flag indicating pre-release (or beta) status
        identifiers:
          type: array
          description: List of identifiers for the component
          items:
            $ref: '#/components/schemas/identifier'
        collectionReferences:
          type: array
          items:
            $ref: '#/components/schemas/typeUuid'
          description: Array of UUIDs referencing TEA Collection entries
          default: []
      required:
        - uuid
        - version
        - releaseDate
    collectionUpdateReason:
      type: object
      description: Reason for the update to the TEA collection
      properties:
        type:
          description: Type of update reason
          type: string
          enum:
            - INITIAL_RELEASE
            - VEX_UPDATED
            - ARTIFACT_UPDATED
            - ARTIFACT_ADDED
            - ARTIFACT_REMOVED
        comment:
          type: string
          description: Free text description
      required:
        - type
    collection:
      type: object
      description: A collection of security-related documents
      properties:
        uuid:
          description: |
            UUID of the TEA Collection object. Note that this is equal to the UUID of the associated TEA Release object.
          $ref: '#/components/schemas/typeUuid'
        version:
          type: integer
          description: TEA Collection version, incremented each time its content changes. Versions start with 1.
          minimum: 1
        releaseDate:
          description: The date when the TEA Collection version was created.
          type: string
          format: date-time
          example: '2024-03-20T15:30:00Z'
        updateReason:
          description: Reason for the update/release of the TEA Collection object.
          $ref: '#/components/schemas/collectionUpdateReason'
        artifacts:
          type: array
          description: List of TEA artifact objects.
          items:
            $ref: '#/components/schemas/artifact'
      required:
        - uuid
        - version
        - releaseDate
        - updateReason
    artifact:
      type: object
      description: A security-related document
      properties:
        uuid:
          description: UUID of the TEA Artifact object.
          $ref: '#/components/schemas/typeUuid'
        name:
          type: string
          description: Artifact name
        type:
          description: Type of artifact
          $ref: '#/components/schemas/typeCollectionArtifactType'
        author:
          $ref: '#/components/schemas/typeAuthor'
          description: Author of the artifact
        formats:
          type: array
          description: List of objects with the same content, but in different formats.
          items:
            $ref: '#/components/schemas/artifactFormat'
      required:
        - uuid
        - name
        - type
        - author
        - formats
    artifactFormat:
      type: object
      description: A security-related document in a specific format
      properties:
        mimeType:
          type: string
          description: The MIME type of the document
        description:
          type: string
          description: A free text describing the artifact
        url:
          type: string
          format: uri
          description: Direct download URL for the artifact
        signatureUrl:
          type: string
          format: uri
          description: Direct download URL for an external signature of the artifact
        checksums:
          type: array
          items:
            $ref: '#/components/schemas/artifactChecksum'
          description: List of checksums for the artifact
      required:
        - mimeType
        - description
        - url
        - checksums
    typeAuthor:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
          format: email
        organization:
          type: string
      required:
        - name
        - email
        - organization
    typeCollectionArtifactType:
      type: string
      title: Type
      description: Specifies the type of external reference.
      enum:
        - ATTESTATION
        - BOM
        - BUILD_META
        - CERTIFICATION
        - FORMULATION
        - LICENSE
        - RELEASE_NOTES
        - SECURITY_TXT
        - THREAT_MODEL
        - VULNERABILITIES
        - OTHER
    typeUuid:
      type: string
      format: uuid
    typePackage:
      type: string
      description: Package type following PURL specification
      enum:
        - alpm
        - apk
        - bitbucket
        - bitnami
        - cargo
        - cocoapods
        - composer
        - conan
        - conda
        - cpan
        - cran
        - deb
        - docker
        - gem
        - generic
        - github
        - golang
        - hackage
        - hex
        - huggingface
        - luarocks
        - maven
        - mlflow
        - npm
        - nuget
        - oci
        - pub
        - pypi
        - qpkg
        - rpm
        - swid
        - swift
  responses:
    200-tea-product:
      description: TEA Product retrieved successfully
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/product'
    200-tea-products-list:
      description: List of TEA Products retrieved successfully
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/product'
              pagination:
                $ref: '#/components/schemas/pagination'
    200-tea-component:
      description: TEA Component retrieved successfully
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/component'
    200-tea-components-list:
      description: List of TEA Components retrieved successfully
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/component'
              pagination:
                $ref: '#/components/schemas/pagination'
    200-tea-release:
      description: TEA Release retrieved successfully
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/release'
    200-tea-releases-list:
      description: List of TEA Releases retrieved successfully
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/release'
              pagination:
                $ref: '#/components/schemas/pagination'
    200-tea-collection:
      description: TEA Collection retrieved successfully
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/collection'
    200-tea-collections-list:
      description: List of TEA Collections retrieved successfully
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/collection'
              pagination:
                $ref: '#/components/schemas/pagination'
    400-invalid-parameters:
      description: Invalid parameters
      content:
        application/json: {}
    401-unauthorized:
      description: Authentication required
      content:
        application/json: {}
    404-object-by-id-not-found:
      description: Object requested by identifier not found
      content:
        application/json: {}
    pagination:
      type: object
      properties:
        total:
          type: integer
          description: Total number of items
        pageOffset:
          type: integer
          description: Current page offset
        pageSize:
          type: integer
          description: Number of items per page
        hasNext:
          type: boolean
          description: Whether there are more pages
        hasPrevious:
          type: boolean
          description: Whether there are previous pages
      required:
        - total
        - pageOffset
        - pageSize
        - hasNext
        - hasPrevious
  parameters:
    page-offset:
      name: pageOffset
      description: Pagination offset
      in: query
      required: false
      schema:
        type: integer
        format: int64
        default: 0
    pageSize:
      name: pageSize
      description: Pagination size
      in: query
      required: false
      schema:
        type: integer
        format: int64
        default: 100
    teiUrn:
      name: teiUrn
      description: Transparency Exchange Identifier (URN)
      in: path
      required: true
      schema:
        type: string
        pattern: ^urn:tei:[a-zA-Z0-9]+:[a-zA-Z0-9\.-]+:.+$
    productIdentifier:
      name: productIdentifier
      description: Customer unique Product Identifier
      in: path
      required: true
      schema:
        type: string
        format: uuid
    collectionIdentifier:
      name: collectionIdentifier
      description: TEA Collection Identifier
      in: path
      required: true
      schema:
        type: string
        format: uuid
    barcode:
      name: barcode
      description: Barcode
      in: query
      required: false
      schema:
        type: string
    sku:
      name: sku
      description: Product SKU
      in: query
      required: false
      schema:
        type: string
    vendorUuid:
      name: vendorUuid
      description: Vendor UUID
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/typeUuid'
    idType:
      name: idType
      description: Type of identifier specified in the `idValue` parameter
      in: query
      schema:
        type: string
        enum:
          - cpe
          - tei
          - purl
    id-value:
      name: idValue
      description: If present, only the objects with the given identifier value will be returned
      in: query
      schema:
        type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |
        Bearer token authentication is a stateless authentication scheme where the client sends a token in the HTTP Authorization header.
        The server validates the token and grants access to the requested resource to anyone with the token without needing to authenticate
        again, and stolen tokens can be used by anyone.
    basicAuth:
      type: http
      scheme: basic
      description: |
        Basic authentication is a plaintext scheme built into the HTTP protocol and has been deemed insecure because headers are commonly
        logged in plaintext.
    mutualTLS:
      type: mutualTLS
      description: |
        Client certificate authentication is a secure authentication scheme where the client presents a valid certificate to the server
        for authentication. The server validates the certificate and grants access to the requested resource, but stolen certificates can be
        used by anyone.
    pasetoAuth:
      type: http
      scheme: bearer
      bearerFormat: PASETO
      description: |
        Platform-Agnostic Security Tokens (PASETO) is a secure alternative to JWT that is resistant to many cryptographic vulnerabilities.
        PASETO tokens use versioned protocols that specify modern cryptographic algorithms.
    verifiableCredentials:
      type: http
      scheme: bearer
      bearerFormat: VC-JWT
      description: |
        W3C Verifiable Credentials 2.0 with proof field is a standard for expressing verifiable credentials as signed JWT tokens.
        The integrity and authenticity of the credential can be cryptographically verified.
    hmacAuth:
      type: apiKey
      in: header
      name: X-HMAC-Signature
      description: |
        HMAC authentication uses a shared secret key to create a signature of the request content using a secure hash algorithm (SHA256,
        SHA384, SHA512, SHA3-256, SHA3-384, or SHA3-512). The server verifies this signature to authenticate the request.
security:
  - bearerAuth: []
  - basicAuth: []
  - mutualTLS: []
  - pasetoAuth: []
  - verifiableCredentials: []
  - hmacAuth: []
tags:
  - name: TEA Product
    description: Operations related to TEA Products
  - name: TEA Component
    description: Operations related to TEA Components
  - name: TEA Release
    description: Operations related to TEA Releases
  - name: TEA Collection
    description: Operations related to TEA Collections
externalDocs:
  description: Transparency Exchange API specification
  url: https://github.com/CycloneDX/transparency-exchange-api
